cmake_minimum_required(VERSION 3.1)
set(CppFiles cliqueTree.cpp stochasticEnumeration.cpp stochasticEnumerationReduceChains.cpp samplingType.cpp cliqueTreeAdjacencyMatrix.cpp horvitzThompson2.cpp customMCMC.cpp armstrongMCMC.cpp customMCMCSymmetric.cpp posteriorInference.cpp)
set(HeaderFiles cliqueTree.h stochasticEnumeration.h numericType.h  samplingType.h cliqueTreeAdjacencyMatrix.h childNode.h horvitzThompson2.h customMCMC.h armstrongMCMC.h customMCMCSymmetric.h posteriorInference.h)
if(USE_NAUTY)
	list(APPEND CppFiles stochasticEnumerationNauty.cpp stochasticEnumerationNautyReduceChains.cpp horvitzThompson.cpp horvitzThompsonReduceChains.cpp)
	list(APPEND HeaderFiles stochasticEnumerationNauty.h horvitzThompson.h)
endif()

add_library(chordalGraphCommon STATIC ${CppFiles} ${HeaderFiles})
target_include_directories(chordalGraphCommon PUBLIC ${Boost_INCLUDE_DIRS} ${PROJECT_SOURCE_DIR}/chordalGraphCommon ${IGRAPH_INCLUDES} ${boostGraphExt_include})
target_link_libraries(chordalGraphCommon PUBLIC ${Boost_LIBRARIES} mpfr sampling)

target_compile_definitions(chordalGraphCommon PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)
if(USE_NAUTY)
	target_link_libraries(chordalGraphCommon PUBLIC nauty)
	target_compile_definitions(chordalGraphCommon PUBLIC HAS_NAUTY)
endif()
if(WIN32)
	set_target_properties(chordalGraphCommon PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR} PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	target_link_libraries(chordalGraphCommon PUBLIC mpir)
else()
	if(NOT(CMAKE_CXX_COMPILER_ID MATCHES "Intel"))
		target_compile_features(chordalGraphCommon PUBLIC cxx_rvalue_references)
	else()
		target_compile_options(chordalGraphCommon PUBLIC "-std=c++11" "-fPIC")
	endif()
endif()
